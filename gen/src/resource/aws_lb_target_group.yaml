apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_lb_target_group
spec:
    args:
        arn:
            description: ARN of the Target Group (matches id).
            type: string
        arn_suffix:
            description: ARN suffix for use with CloudWatch Metrics.
            type: string
        connection_termination:
            description: (Optional) Whether to terminate connections at the end of the deregistration timeout on Network Load Balancers. See doc for more information. Default is false.
            optional: true
            type: string
        cookie_duration:
            description: (Optional) Only used when the type is lb_cookie. The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
            optional: true
            type: string
        cookie_name:
            description: (Optional) Name of the application based cookie. AWSALB, AWSALBAPP, and AWSALBTG prefixes are reserved and cannot be used. Only needed when type is app_cookie.
            optional: true
            type: string
        deregistration_delay:
            description: (Optional) Amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.
            optional: true
            type: string
        enabled:
            description: (Optional) Boolean to enable / disable stickiness. Default is true.
            optional: true
            type: string
        health_check:
            description: (Optional, Maximum of 1) Health Check configuration block. Detailed below.
            type: string
        healthy_threshold:
            description: (Optional) Number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.
            optional: true
            type: string
        id:
            description: ARN of the Target Group (matches arn).
            type: string
        interval:
            description: (Optional) Approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For lambda target groups, it needs to be greater as the timeout of the underlying lambda. Default 30 seconds.
            optional: true
            type: string
        ip_address_type:
            description: ' (Optional, forces new resource) The type of IP addresses used by the target group, only supported when target type is set to ip. Possible values are ipv4 or ipv6.'
            type: string
        lambda_multi_value_headers_enabled:
            description: (Optional) Whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when target_type is lambda. Default is false.
            optional: true
            type: string
        load_balancing_algorithm_type:
            description: (Optional) Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is round_robin or least_outstanding_requests. The default is round_robin.
            optional: true
            type: string
        matcher:
            description: ' (May be required) Response codes to use when checking for a healthy responses from a target. You can specify multiple values (for example, "200,202" for HTTP(s) or "0,12" for GRPC) or a range of values (for example, "200-299" or "0-99"). Required for HTTP/HTTPS/GRPC ALB. Only applies to Application Load Balancers (i.e., HTTP/HTTPS/GRPC) not Network Load Balancers (i.e., TCP).'
            type: string
        name:
            description: Name of the Target Group.
            type: string
        name_prefix:
            description: (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with name. Cannot be longer than 6 characters.
            type: string
        on_deregistration:
            description: '(Optional) Indicates how the GWLB handles existing flows when a target is deregistered. Possible values are rebalance and no_rebalance. Must match the attribute value set for on_unhealthy. Default: no_rebalance.'
            optional: true
            type: string
        on_unhealthy:
            description: 'Indicates how the GWLB handles existing flows when a target is unhealthy. Possible values are rebalance and no_rebalance. Must match the attribute value set for on_deregistration. Default: no_rebalance.In addition to all arguments above, the following attributes are exported:'
            type: string
        path:
            description: (May be required) Destination for the health check request. Required for HTTP/HTTPS ALB and HTTP NLB. Only applies to HTTP/HTTPS.
            type: string
        port:
            description: (Optional) Port to use to connect with the target. Valid values are either ports 1-65535, or traffic-port. Defaults to traffic-port.
            optional: true
            type: string
        preserve_client_ip:
            description: (Optional) Whether client IP preservation is enabled. See doc for more information.
            optional: true
            type: string
        protocol:
            description: (Optional) Protocol to use to connect with the target. Defaults to HTTP. Not applicable when target_type is lambda.
            optional: true
            type: string
        protocol_version:
            description: (Optional, Forces new resource) Only applicable when protocol is HTTP or HTTPS. The protocol version. Specify GRPC to send requests to targets using gRPC. Specify HTTP2 to send requests to targets using HTTP/2. The default is HTTP1, which sends requests to targets using HTTP/1.1
            type: string
        proxy_protocol_v2:
            description: (Optional) Whether to enable support for proxy protocol v2 on Network Load Balancers. See doc for more information. Default is false.
            optional: true
            type: string
        slow_start:
            description: (Optional) Amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds.
            optional: true
            type: string
        stickiness:
            description: (Optional, Maximum of 1) Stickiness configuration block. Detailed below.
            type: string
        tags:
            description: (Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            optional: true
            type: string
        target_failover:
            description: (Optional) Target failover block. Only applicable for Gateway Load Balancer target groups. See target_failover for more information.
            optional: true
            type: string
        target_type:
            description: (May be required, Forces new resource) Type of target that you must specify when registering targets with this target group. See doc for supported values. The default is instance.Note that you can't specify targets for a target group using both instance IDs and IP addresses.If the target type is ip, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.Network Load Balancers do not support the lambda target type.Application Load Balancers do not support the alb target type.
            type: string
        timeout:
            description: (Optional) Amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the instance target type and 30 seconds for the lambda target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 5 seconds for HTTP health checks.
            optional: true
            type: string
        type:
            description: '(Required) The type of sticky sessions. The only current possible values are lb_cookie, app_cookie for ALBs, source_ip for NLBs, and source_ip_dest_ip, source_ip_dest_ip_proto for GWLBs.target_failover~> strongNOTE: This block is only applicable for a Gateway Load Balancer (GWLB). The two attributes on_deregistration and on_unhealthy cannot be set independently. The value you set for both attributes must be the same.'
            type: string
        unhealthy_threshold:
            description: '(Optional) Number of consecutive health check failures required before considering the target unhealthy. For Network Load Balancers, this value must be the same as the healthy_threshold. Defaults to 3.stickiness~> strongNOTE: Currently, an NLB (i.e., protocol of HTTP or HTTPS) can have an invalid stickiness block with type set to lb_cookie as long as enabled is set to false. However, please update your configurations to avoid errors in a future version of the provider: either remove the invalid stickiness block or set the type to source_ip.'
            optional: true
            type: string
        vpc_id:
            description: '(Optional, Forces new resource) Identifier of the VPC in which to create the target group. Required when target_type is instance, ip or alb. Does not apply when target_type is lambda.health_check~> strongNote: The Health Check parameters you can set vary by the protocol of the Target Group. Many parameters cannot be set to custom values for network load balancers at this time. See http://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html for a complete reference. Keep in mind, that health checks produce actual requests to the backend. The underlying function is invoked when target_type is set to lambda.'
            type: string
    attrs:
        arn:
            description: ARN of the Target Group (matches id).
            type: string
        arn_suffix:
            description: ARN suffix for use with CloudWatch Metrics.
            type: string
        id:
            description: ARN of the Target Group (matches arn).
            type: string
        name:
            description: Name of the Target Group.
            type: string
        tags_all:
            description: A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
            type: string
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
