apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_keyspaces_table
spec:
    args:
        arn:
            description: The ARN of the table.
            type: string
            optional: true
        capacity_specification:
            description: (Optional) Specifies the read/write throughput capacity mode for the table.
            type: string
            optional: true
        clustering_key:
            description: (Required) The columns that are part of the clustering key of the table.
            type: string
            optional: true
        column:
            description: (Required) The regular columns of the table.
            type: string
            optional: true
        comment:
            description: (Optional) A description of the table.
            type: string
            optional: true
        create:
            description: (Default 10m)
            type: string
            optional: true
        default_time_to_live:
            description: (Optional) The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.
            type: string
            optional: true
        delete:
            description: (Default 10m)
            type: string
            optional: true
        encryption_specification:
            description: (Optional) Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.
            type: string
            optional: true
        keyspace_name:
            description: (Required) The name of the keyspace that the table is going to be created in.
            type: string
            optional: true
        kms_key_identifier:
            description: (Optional) The Amazon Resource Name (ARN) of the customer managed KMS key.
            type: string
            optional: true
        message:
            description: '(Required) A description of the table.The encryption_specification object takes the following arguments:'
            type: string
            optional: true
        name:
            description: '(Required) The name of the static column.The ttl object takes the following arguments:'
            type: string
            optional: true
        order_by:
            description: '(Required) The order modifier. Valid values: ASC, DESC.The static_column object takes the following arguments:'
            type: string
            optional: true
        partition_key:
            description: (Required) The columns that are part of the partition key of the table .
            type: string
            optional: true
        point_in_time_recovery:
            description: (Optional) Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.
            type: string
            optional: true
        read_capacity_units:
            description: (Optional) The throughput capacity specified for read operations defined in read capacity units (RCUs).
            type: string
            optional: true
        schema_definition:
            description: (Optional) Describes the schema of the table.
            type: string
            optional: true
        static_column:
            description: '(Required) The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.The column object takes the following arguments:'
            type: string
            optional: true
        status:
            description: '(Optional) Valid values: ENABLED.In addition to all arguments above, the following attributes are exported:'
            type: string
            optional: true
        table_name:
            description: (Required) The name of the table.
            type: string
            optional: true
        tags:
            description: (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
            type: string
            optional: true
        tags_all:
            description: 'A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.TimeoutsConfiguration options:'
            type: string
            optional: true
        throughput_mode:
            description: '(Optional) The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.'
            type: string
            optional: true
        ttl:
            description: '(Optional) Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.The capacity_specification object takes the following arguments:'
            type: string
            optional: true
        type:
            description: '(Required) The data type of the column. See the Developer Guide for a list of available data types.The partition_key object takes the following arguments:'
            type: string
            optional: true
        update:
            description: (Default 30m)
            type: string
            optional: true
        write_capacity_units:
            description: '(Optional) The throughput capacity specified for write operations defined in write capacity units (WCUs).The comment object takes the following arguments:'
            type: string
            optional: true
    attrs:
        arn:
            description: The ARN of the table.
            type: string
        create:
            description: (Default 10m)
            type: string
        delete:
            description: (Default 10m)
            type: string
        tags_all:
            description: 'A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.TimeoutsConfiguration options:'
            type: string
        update:
            description: (Default 30m)
            type: string
    terraform:
        backend: ""
        version: ""
        provider:
            assume_role: false
            name: aws
            region: ""
            source: hashicorp/aws
            version: v4.40.0
            default_tags:
                enabled: true
