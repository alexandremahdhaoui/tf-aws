apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_autoscaling_group
spec:
    args:
        accelerator_count:
            description: (Optional) Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
            optional: true
            type: string
        accelerator_manufacturers:
            description: (Optional) List of accelerator manufacturer names. Default is any manufacturer.
            optional: true
            type: string
        accelerator_names:
            description: (Optional) List of accelerator names. Default is any acclerator.
            optional: true
            type: string
        accelerator_total_memory_mib:
            description: (Optional) Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
            optional: true
            type: string
        accelerator_types:
            description: (Optional) List of accelerator types. Default is any accelerator type.
            optional: true
            type: string
        arn:
            description: ARN for this Auto Scaling Group
            type: string
        availability_zones:
            description: Availability zones of the Auto Scaling Group.
            type: string
        bare_metal:
            description: (Optional) Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
            optional: true
            type: string
        baseline_ebs_bandwidth_mbps:
            description: (Optional) Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
            optional: true
            type: string
        burstable_performance:
            description: (Optional) Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
            optional: true
            type: string
        capacity_rebalance:
            description: (Optional) Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.
            optional: true
            type: string
        checkpoint_delay:
            description: (Optional) Number of seconds to wait after a checkpoint. Defaults to 3600.
            optional: true
            type: string
        checkpoint_percentages:
            description: (Optional) List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.
            optional: true
            type: string
        context:
            description: (Optional) Reserved.
            optional: true
            type: string
        cpu_manufacturers:
            description: ' (Optional) List of CPU manufacturer names. Default is any manufacturer.~> strongNOTE: Don''t confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.'
            optional: true
            type: string
        default_cooldown:
            description: Time between a scaling activity and the succeeding scaling activity.
            type: string
        default_instance_warmup:
            description: The duration of the default instance warmup, in seconds.
            type: string
        desired_capacity:
            description: ' -The number of Amazon EC2 instances that should be running in the group.'
            type: string
        enabled_metrics:
            description: (Optional) List of metrics to collect. The allowed values are defined by the underlying AWS API.
            optional: true
            type: string
        excluded_instance_types:
            description: '(Optional) List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.'
            optional: true
            type: string
        force_delete:
            description: |-
                (Optional) Allows deleting the Auto Scaling Group without waiting
                for all instances in the pool to terminate.  You can force an Auto Scaling Group to delete
                even if it's in the process of scaling a resource. Normally, Terraform
                drains all the instances before deleting the group.  This bypasses that
                behavior and potentially leaves resources dangling.
            optional: true
            type: string
        health_check_grace_period:
            description: Time after instance comes into service before checking health.
            type: string
        health_check_type:
            description: '"EC2" or "ELB". Controls how health checking is done.'
            type: string
        id:
            description: Auto Scaling Group id.
            type: string
        initial_lifecycle_hook:
            description: Lifecycle Hooksstrongbeforeaws_autoscaling_lifecycle_hookautoscaling_group_nameaws_autoscaling_lifecycle_hook resource.
            type: string
        instance_generations:
            description: (Optional) List of instance generation names. Default is any generation.
            optional: true
            type: string
        instance_refresh:
            description: |-
                (Optional) If this block is configured, start an
                Instance Refreshbelow.
            optional: true
            type: string
        instance_requirements:
            description: (Optional) Override the instance type in the Launch Template with instance types that satisfy the requirements.
            optional: true
            type: string
        instance_reuse_policy:
            description: (Optional) Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.
            optional: true
            type: string
        instance_type:
            description: (Optional) Override the instance type in the Launch Template.
            optional: true
            type: string
        instance_warmup:
            description: (Optional) Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
            optional: true
            type: string
        instances_distribution:
            description: (Optional) Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
            optional: true
            type: string
        key:
            description: (Required) Key
            type: string
        launch_configuration:
            description: The launch configuration of the Auto Scaling Group
            type: string
        launch_template:
            description: '(Required) Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.mixed_instances_policy instances_distributionThis configuration block supports the following:'
            type: string
        launch_template_id:
            description: (Optional) ID of the launch template. Conflicts with launch_template_name.
            optional: true
            type: string
        launch_template_name:
            description: (Optional) Name of the launch template. Conflicts with launch_template_id.
            optional: true
            type: string
        launch_template_specification:
            description: (Optional) Override the instance launch template specification in the Launch Template.
            optional: true
            type: string
        load_balancers:
            description: target_group_arns instead.
            type: string
        local_storage:
            description: (Optional) Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
            optional: true
            type: string
        local_storage_types:
            description: (Optional) List of local storage type names. Default any storage type.
            optional: true
            type: string
        max:
            description: '(Optional) Maximum.tag and tagsThe tag attribute accepts exactly one tag declaration with the following fields:'
            optional: true
            type: string
        max_group_prepared_capacity:
            description: '(Optional) Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.instance_reuse_policyThis configuration block supports the following:'
            optional: true
            type: string
        max_instance_lifetime:
            description: ' (Optional) Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.'
            optional: true
            type: string
        max_size:
            description: Maximum size of the Auto Scaling Group
            type: string
        memory_gib_per_vcpu:
            description: (Optional) Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
            optional: true
            type: string
        memory_mib:
            description: (Required) Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
            type: string
        metrics_granularity:
            description: (Optional) Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.
            optional: true
            type: string
        min:
            description: (Required) Minimum.
            type: string
        min_elb_capacity:
            description: |-
                (Optional) Setting this causes Terraform to wait for
                this number of instances from this Auto Scaling Group to show up healthy in the
                ELB only on creation. Updates will not wait on ELB instance number changes.
                (See also Waiting for Capacity below.)
            optional: true
            type: string
        min_healthy_percentage:
            description: (Optional) Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
            optional: true
            type: string
        min_size:
            description: Minimum size of the Auto Scaling Group
            type: string
        mixed_instances_policy:
            description: ' (Optional) Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.'
            optional: true
            type: string
        name:
            description: Name of the Auto Scaling Group
            type: string
        name_prefix:
            description: |-
                (Optional) Creates a unique name beginning with the specified
                prefix. Conflicts with name.
            optional: true
            type: string
        network_interface_count:
            description: (Optional) Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
            optional: true
            type: string
        on_demand_allocation_strategy:
            description: '(Optional) Strategy to use when launching on-demand instances. Valid values: prioritized. Default: prioritized.'
            optional: true
            type: string
        on_demand_base_capacity:
            description: '(Optional) Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.'
            optional: true
            type: string
        on_demand_max_price_percentage_over_lowest_price:
            description: (Optional) Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
            optional: true
            type: string
        on_demand_percentage_above_base_capacity:
            description: '(Optional) Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.'
            optional: true
            type: string
        override:
            description: '(Optional) List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.mixed_instances_policy launch_template launch_template_specification~> strongNOTE: Either launch_template_id or launch_template_name must be specified.This configuration block supports the following:'
            optional: true
            type: string
        placement_group:
            description: ' (Optional) Name of the placement group into which you''ll launch your instances, if any.'
            optional: true
            type: string
        pool_state:
            description: '(Optional) Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.'
            optional: true
            type: string
        preferences:
            description: |
                (Optional) Override default parameters for Instance Refresh.
            optional: true
            type: string
        propagate_at_launch:
            description: |-
                (Required) Enables propagation of the tag to
                Amazon EC2 instances launched via this ASGTo declare multiple tags additional tagtagstagtag and tags are mutually exclusive, only one of them can be specified.~> strongNOTE: Other AWS APIs may automatically add special tags to their associated Auto Scaling Group for management purposes, such as ECS Capacity Providers adding the AmazonECSManaged tag. These generally should be included in the configuration so Terraform does not attempt to remove them and so if the min_size was greater than zero on creation, that these tag(s) are applied to any initial EC2 Instances in the Auto Scaling Group. If these tag(s) were missing in the Auto Scaling Group configuration on creation, affected EC2 Instances missing the tags may require manual intervention of adding the tags to ensure they work properly with the other AWS service.instance_refreshThis configuration block supports the following:
            type: string
        protect_from_scale_in:
            description: Using instance scale-in protection
            type: string
        require_hibernate_support:
            description: (Optional) Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
            optional: true
            type: string
        reuse_on_scale_in:
            description: '(Optional) Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.In addition to all arguments above, the following attributes are exported:'
            optional: true
            type: string
        service_linked_role_arn:
            description: ' (Optional) ARN of the service-linked role that the ASG will use to call other AWS services'
            optional: true
            type: string
        spot_allocation_strategy:
            description: '(Optional) How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized. Default: lowest-price.'
            optional: true
            type: string
        spot_instance_pools:
            description: '(Optional) Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.'
            optional: true
            type: string
        spot_max_price:
            description: '(Optional) Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.mixed_instances_policy launch_templateThis configuration block supports the following:'
            optional: true
            type: string
        spot_max_price_percentage_over_lowest_price:
            description: (Optional) Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.If you set DesiredCapacityType to vcpu or memory-mib, the price protection threshold is applied based on the per vCPU or per memory price instead of the per instance price.
            optional: true
            type: string
        strategy:
            description: (Required) Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.
            type: string
        suspended_processes:
            description: (Optional) List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefreshLaunch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
            optional: true
            type: string
        tag:
            description: ' (Optional) Configuration block(s) containing resource tags. Conflicts with tags. See Tag below for more details.'
            optional: true
            type: string
        tags:
            description: ' (Optional, strongDeprecated use tag instead) Set of maps containing resource tags. Conflicts with tag. See Tags below for more details.'
            type: string
        target_group_arns:
            description: ' (Optional) Set of aws_alb_target_group ARNs, for use with Application or Network Load Balancing.'
            optional: true
            type: string
        termination_policies:
            description: ' (Optional) List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.'
            optional: true
            type: string
        total_local_storage_gb:
            description: (Optional) Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
            optional: true
            type: string
        triggers:
            description: '(Optional) Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.~> strongNOTE: A refresh is started when any of the following Auto Scaling Group properties change: launch_configuration, launch_template, mixed_instances_policy. Additional properties can be specified in the triggers property of instance_refresh.~> strongNOTE: A refresh will not start when version = "$Latest" is configured in the launch_template block. To trigger the instance refresh when a launch template is changed, configure version to use the latest_version attribute of the aws_launch_template resource.~> strongNOTE: Auto Scaling Groups support up to one active instance refresh at a time. When this resource is updated, any existing refresh is cancelled.~> strongNOTE: Depending on health check settings and group size, an instance refresh may take a long time or fail. This resource does not wait for the instance refresh to complete.warm_poolThis configuration block supports the following:'
            optional: true
            type: string
        value:
            description: (Required) Value
            type: string
        vcpu_count:
            description: (Required) Block describing the minimum and maximum number of vCPUs. Default is no maximum.
            type: string
        version:
            description: '(Optional) Template version. Can be version number, $Latest, or $Default. (Default: $Default).mixed_instances_policy launch_template overrideThis configuration block supports the following:'
            optional: true
            type: string
        vpc_zone_identifier:
            description: ' (Optional) - The VPC zone identifier~> strongNOTE: When using ELB as the health_check_type, health_check_grace_period is required.~> strongNOTE:initial_lifecycle_hookaws_autoscaling_lifecycle_hookinitial_lifecycle_hookaws_autoscaling_lifecycle_hookcapacityinitial_lifecycle_hookaws_autoscaling_lifecycle_hook.TimeoutsConfiguration options:'
            optional: true
            type: string
        wait_for_capacity_timeout:
            description: duration
            type: string
        wait_for_elb_capacity:
            description: |-
                (Optional) Setting this will cause Terraform to wait
                for exactly this number of healthy instances from this Auto Scaling Group in
                all attached load balancers on both create and update operations. (Takes
                precedence over min_elb_capacityWaiting for Capacity below.)
            optional: true
            type: string
        warm_pool:
            description: '(Optional) If this block is configured, add a Warm Poolbelowlaunch_template~> strongNOTE: Either id or name must be specified.The top-level launch_template block supports the following:'
            optional: true
            type: string
        weighted_capacity:
            description: '(Optional) Number of capacity units, which gives the instance type a proportional weight to other instance types.mixed_instances_policy launch_template override instance_requirementsThis configuration block supports the following:~> strongNOTE: Both memory_mib.min and vcpu_count.min must be specified.'
            optional: true
            type: string
    attrs:
        arn:
            description: ARN for this Auto Scaling Group
            type: string
        availability_zones:
            description: Availability zones of the Auto Scaling Group.
            type: string
        default_cooldown:
            description: Time between a scaling activity and the succeeding scaling activity.
            type: string
        default_instance_warmup:
            description: The duration of the default instance warmup, in seconds.
            type: string
        delete:
            description: '(Default 10m)Waiting for CapacityA newly-created ASG is initially empty and begins to scale to min_sizedesired_capacityWaiting for ASG Capacitymin_size (or desired_capacityIf min_size or desired_capacityTerraform considers an instance "healthy" when the ASG reports HealthStatus: "Healthy" and LifecycleState: "InService". See the wait_for_capacity_timeoutSetting wait_for_capacity_timeout to "0" disables ASG Capacity waiting.Waiting for ELB Capacityload_balancers attribute or with ALBs specified with target_group_arns.The min_elb_capacity"InService"If wait_for_elb_capacity"InService"As with ASG Capacity, Terraform will wait for up to wait_for_capacity_timeoutTroubleshooting Capacity Waiting Timeouts'
            type: string
        desired_capacity:
            description: ' -The number of Amazon EC2 instances that should be running in the group.'
            type: string
        health_check_grace_period:
            description: Time after instance comes into service before checking health.
            type: string
        health_check_type:
            description: '"EC2" or "ELB". Controls how health checking is done.'
            type: string
        id:
            description: Auto Scaling Group id.
            type: string
        launch_configuration:
            description: The launch configuration of the Auto Scaling Group
            type: string
        max_size:
            description: Maximum size of the Auto Scaling Group
            type: string
        min_size:
            description: Minimum size of the Auto Scaling Group
            type: string
        name:
            description: Name of the Auto Scaling Group
            type: string
        vpc_zone_identifier:
            description: ' (Optional) - The VPC zone identifier~> strongNOTE: When using ELB as the health_check_type, health_check_grace_period is required.~> strongNOTE:initial_lifecycle_hookaws_autoscaling_lifecycle_hookinitial_lifecycle_hookaws_autoscaling_lifecycle_hookcapacityinitial_lifecycle_hookaws_autoscaling_lifecycle_hook.TimeoutsConfiguration options:'
            type: string
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
