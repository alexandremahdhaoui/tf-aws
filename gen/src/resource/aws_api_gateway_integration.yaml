apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_api_gateway_integration
spec:
    args:
        cache_key_parameters:
            description: (Optional) List of cache key parameters for the integration.
            optional: true
            type: string
        cache_namespace:
            description: (Optional) Integration's cache namespace.
            optional: true
            type: string
        connection_id:
            description: (Optional) ID of the VpcLink used for the integration. strongRequired if connection_type is VPC_LINK
            optional: true
            type: string
        connection_type:
            description: (Optional) Integration input's connectionType. Valid values are INTERNET (default for connections through the public routable internet), and VPC_LINK (for private connections between API Gateway and a network load balancer in a VPC).
            optional: true
            type: string
        content_handling:
            description: (Optional) How to handle request payload content type conversions. Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT. If this property is not defined, the request payload will be passed through from the method request to integration request without modification, provided that the passthroughBehaviors is configured to support payload pass-through.
            optional: true
            type: string
        credentials:
            description: (Optional) Credentials required for the integration. For AWS integrations, 2 options are available. To specify an IAM Role for Amazon API Gateway to assume, use the role's ARN. To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::\*:user/\*.
            optional: true
            type: string
        http_method:
            description: (Required) HTTP method (GET, POST, PUT, DELETE, HEAD, OPTION, ANY
            type: string
        integration_http_method:
            description: GET, POST, PUT, DELETE, HEAD, OPTIONs, ANY, PATCHstrongRequired if type is AWS, AWS_PROXY, HTTP or HTTP_PROXYAWScan only be invoked via POST.
            type: string
        passthrough_behavior:
            description: (Optional) Integration passthrough behavior (WHEN_NO_MATCH, WHEN_NO_TEMPLATES, NEVER).  strongRequired if request_templates is used.
            optional: true
            type: string
        request_parameters:
            description: |-
                (Optional) Map of request query string parameters and headers that should be passed to the backend responder.
                For example: request_parameters = { "integration.request.header.X-Some-Other-Header" = "method.request.header.X-Some-Header" }
            optional: true
            type: string
        request_templates:
            description: (Optional) Map of the integration's request templates.
            optional: true
            type: string
        resource_id:
            description: (Required) API resource ID.
            type: string
        rest_api_id:
            description: (Required) ID of the associated REST API.
            type: string
        timeout_milliseconds:
            description: (Optional) Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds.
            optional: true
            type: string
        tls_config:
            description: '(Optional) TLS configuration. See below.tls_config Configuration BlockThe tls_config configuration block supports the following arguments:'
            optional: true
            type: string
        type:
            description: (Required) Integration input's type. Valid values are HTTP (for HTTP backends), MOCK (not calling any real backend), AWS (for AWS services), AWS_PROXY (for Lambda proxy integration) and HTTP_PROXY (for HTTP proxy integration). An HTTP or HTTP_PROXY integration with a connection_type of VPC_LINK is referred to as a private integration and uses a VpcLink to connect API Gateway to a network load balancer of a VPC.
            type: string
        uri:
            description: (Optional) Input's URI. strongRequired if type is AWS, AWS_PROXY, HTTP or HTTP_PROXYarn:aws:apigateway:{region}:{subdomain.service|service}:{path|action}/{service_api}. region, subdomain and servicearn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:012345678901:function:my-func/invocations. For private integrations, the URI parameter is not used for routing requests to your endpoint, but is used for setting the Host header and for certificate validation.
            optional: true
            type: string
    attrs: {}
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
