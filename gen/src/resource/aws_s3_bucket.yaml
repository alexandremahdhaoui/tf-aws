apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_s3_bucket
spec:
    args:
        abort_incomplete_multipart_upload_days:
            description: ' (Optional) Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.'
            optional: true
            type: string
        acceleration_status:
            description: (Optional, strongDeprecated) Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended. Cannot be used in cn-north-1 or us-gov-west-1aws_s3_bucket_accelerate_configuration instead.
            type: string
        access_control_translation:
            description: (Optional) Specifies the overrides to use for object owners on replication. Must be used in conjunction with account_id owner override configuration.
            optional: true
            type: string
        account_id:
            description: (Optional) The Account ID to use for overriding the object owner on replication. Must be used in conjunction with access_control_translation override configuration.
            optional: true
            type: string
        acl:
            description: (Optional, strongDeprecated) The canned ACL to apply. Valid values are private, public-read, public-read-write, aws-exec-read, authenticated-read, and log-delivery-write. Defaults to private.  Conflicts with grant. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_acl instead.
            type: string
        allowed_headers:
            description: (Optional) List of headers allowed.
            optional: true
            type: string
        allowed_methods:
            description: (Required) One or more HTTP methods that you allow the origin to execute. Can be GET, PUT, POST, DELETE or HEAD.
            type: string
        allowed_origins:
            description: (Required) One or more origins you want customers to be able to access the bucket from.
            type: string
        apply_server_side_encryption_by_default:
            description: (Required) A single object for setting server-side encryption by default. (documented below)
            type: string
        arn:
            description: The ARN of the bucket. Will be of format arn:aws:s3:::bucketname.
            type: string
        bucket:
            description: (Required) The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
            type: string
        bucket_domain_name:
            description: The bucket domain name. Will be of format bucketname.s3.amazonaws.com.
            type: string
        bucket_key_enabled:
            description: '(Optional) Whether or not to use Amazon S3 Bucket Keys for SSE-KMS.The apply_server_side_encryption_by_default configuration block supports the following arguments:'
            optional: true
            type: string
        bucket_prefix:
            description: (Optional, Forces new resource) Creates a unique bucket name beginning with the specified prefix. Conflicts with bucket. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules may be found here.
            type: string
        bucket_regional_domain_name:
            description: 'The bucket region-specific domain name. The bucket domain name including the region name, please refer here for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent redirect issues from CloudFront to S3 Origin URL.'
            type: string
        cors_rule:
            description: (Optional, strongDeprecated) A rule of Cross-Origin Resource Sharing. See CORS rule below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_cors_configuration instead.
            type: string
        create:
            description: (Default 20m)
            type: string
        date:
            description: (Optional) Specifies the date after which you want the corresponding action to take effect.
            optional: true
            type: string
        days:
            description: (Optional) The number of days that you want to specify for the default retention period.
            optional: true
            type: string
        default_retention:
            description: '(Required) The default retention period that you want to apply to new objects placed in this bucket (documented below).Default RetentionThe default_retention configuration block supports the following arguments:~> strongNOTE: Either days or years must be specified, but not both.'
            type: string
        delete_marker_replication_status:
            description: (Optional) Whether delete markers are replicated. The only valid value is Enabled. To disable, omit this argument. This argument is only valid with V2 replication configurations (i.e., when filter is used).
            optional: true
            type: string
        destination:
            description: (Required) Specifies the destination for the rule (documented below).
            type: string
        enabled:
            description: (Optional) Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
            optional: true
            type: string
        error_document:
            description: (Optional) An absolute path to the document to return in case of a 4XX error.
            optional: true
            type: string
        expiration:
            description: (Optional) Specifies a period in the object's expire. See Expiration below for details.
            optional: true
            type: string
        expired_object_delete_marker:
            description: '(Optional) On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.TransitionThe transition configuration block supports the following arguments:'
            optional: true
            type: string
        expose_headers:
            description: (Optional) One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).
            optional: true
            type: string
        filter:
            description: (Optional, Conflicts with prefix) Filter that identifies subset of objects to which the replication rule applies (documented below).
            type: string
        force_destroy:
            description: (Optional, Default:false) A boolean that indicates all objects (including any locked objects) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are emnot recoverable.
            type: string
        grant:
            description: (Optional, strongDeprecated) An ACL policy grant. See Grant below for details. Conflicts with acl. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_acl instead.
            type: string
        hosted_zone_id:
            description: The Route 53 Hosted Zone ID for this bucket's region.
            type: string
        id:
            description: The name of the bucket.
            type: string
        index_document:
            description: (Required, unless using redirect_all_requests_to) Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
            type: string
        kms_master_key_id:
            description: '(Optional) The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of sse_algorithm as aws:kms. The default aws/s3 AWS KMS master key is used if this element is absent while the sse_algorithm is aws:kms.Versioning~> strongNOTE: Currently, changes to the versioning configuration of emexisting resources cannot be automatically detected by Terraform. To manage changes of versioning state to an S3 bucket, use the aws_s3_bucket_versioning resource instead. If you use versioning on an aws_s3_bucket, Terraform will assume management over the versioning state of the S3 bucket, treating additional versioning state changes as drift. For this reason, versioning cannot be mixed with the external aws_s3_bucket_versioning resource for a given S3 bucket.The versioning configuration block supports the following arguments:'
            optional: true
            type: string
        lifecycle_rule:
            description: (Optional, strongDeprecated) A configuration of object lifecycle management. See Lifecycle Ruleaws_s3_bucket_lifecycle_configuration instead.
            type: string
        logging:
            description: (Optional, strongDeprecated) A configuration of S3 bucket logging parameters. See Loggingaws_s3_bucket_logging instead.
            type: string
        max_age_seconds:
            description: '(Optional) Specifies time in seconds that browser can cache the response for a preflight request.Grant~> strongNOTE: Currently, changes to the grant configuration of emexisting resources cannot be automatically detected by Terraform. To manage changes of ACL grants to an S3 bucket, use the aws_s3_bucket_acl resource instead. If you use grant on an aws_s3_bucket, Terraform will assume management over the full set of ACL grants for the S3 bucket, treating additional ACL grants as drift. For this reason, grant cannot be mixed with the external aws_s3_bucket_acl resource for a given S3 bucket.The grant configuration block supports the following arguments:'
            optional: true
            type: string
        metrics:
            description: '(Optional) Enables replication metrics (required for S3 RTC) (documented below).Replication TimeThe replication_time configuration block supports the following arguments:'
            optional: true
            type: string
        mfa_delete:
            description: '(Optional) Enable MFA delete for either Change the versioning state of your bucket or Permanently delete an object version. Default is false. This cannot be used to toggle this setting but is available to allow managed buckets to reflect the state in AWSWebsite~> strongNOTE: Currently, changes to the website configuration of emexisting resources cannot be automatically detected by Terraform. To manage changes to the website configuration of an S3 bucket, use the aws_s3_bucket_website_configuration resource instead. If you use website on an aws_s3_bucket, Terraform will assume management over the configuration of the website of the S3 bucket, treating additional website configuration changes as drift. For this reason, website cannot be mixed with the external aws_s3_bucket_website_configuration resource for a given S3 bucket.The website configuration block supports the following arguments:'
            optional: true
            type: string
        minutes:
            description: '(Optional) Threshold within which objects are to be replicated. The only valid value is 15.Source Selection CriteriaThe source_selection_criteria configuration block supports the following argument:'
            optional: true
            type: string
        mode:
            description: (Required) The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are GOVERNANCE and COMPLIANCE.
            type: string
        noncurrent_version_expiration:
            description: (Optional) Specifies when noncurrent object versions expire. See Noncurrent Version Expiration below for details.
            optional: true
            type: string
        noncurrent_version_transition:
            description: '(Optional) Specifies when noncurrent object versions transitions. See Noncurrent Version Transition below for details.ExpirationThe expiration configuration block supports the following arguments:'
            optional: true
            type: string
        object_lock_configuration:
            description: (Optional, strongDeprecated) A configuration of S3 object locking. See Object Lock Configurationobject_lock_enabled parameter and the resource aws_s3_bucket_object_lock_configuration instead.
            type: string
        object_lock_enabled:
            description: (Optional, strongDeprecated) Indicates whether this bucket has an Object Lock configuration enabled. Valid value is Enabled. Use the top-level argument object_lock_enabled instead.
            type: string
        permissions:
            description: (Required) List of permissions to apply for grantee. Valid values are READ, WRITE, READ_ACP, WRITE_ACP, FULL_CONTROL.
            type: string
        policy:
            description: (Optional, strongDeprecated) A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guideaws_s3_bucket_policy instead.
            type: string
        prefix:
            description: (Optional) Object keyname prefix that identifies subset of objects to which the rule applies. Must be less than or equal to 1024 characters in length.
            optional: true
            type: string
        priority:
            description: (Optional) The priority associated with the rule. Priority should only be set if filter is configured. If not provided, defaults to 0. Priority must be unique between multiple rules.
            optional: true
            type: string
        read:
            description: (Default 20m)
            type: string
        redirect_all_requests_to:
            description: (Optional) A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting requests. The default is the protocol that is used in the original request.
            optional: true
            type: string
        region:
            description: The AWS region this bucket resides in.
            type: string
        replica_kms_key_id:
            description: sse_kms_encrypted_objects source selection criteria.
            type: string
        replication_configuration:
            description: (Optional, strongDeprecated) A configuration of replication configuration. See Replication Configurationaws_s3_bucket_replication_configuration instead.
            type: string
        replication_time:
            description: (Optional) Enables S3 Replication Time Control (S3 RTC) (documented below).
            optional: true
            type: string
        request_payer:
            description: (Optional, strongDeprecatedBucketOwner or RequesterRequester Pays Bucketsaws_s3_bucket_request_payment_configuration instead.
            type: string
        role:
            description: (Required) The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
            type: string
        routing_rules:
            description: '(Optional) A json array containing routing rulesIn addition to all arguments above, the following attributes are exported:'
            optional: true
            type: string
        rule:
            description: '(Required) A single object for server-side encryption by default configuration. (documented below)The rule configuration block supports the following arguments:'
            type: string
        rules:
            description: '(Required) Specifies the rules managing the replication (documented below).RulesThe rules configuration block supports the following arguments:~> strongNOTE: Amazon S3''s latest version of the replication configuration is V2, which includes the filterfilterprefix attribute. For backwards compatibility, Amazon S3 continues to support the V1 configuration.'
            type: string
        server_side_encryption_configuration:
            description: (Optional, strongDeprecated) A configuration of server-side encryption configuration. See Server Side Encryption Configurationaws_s3_bucket_server_side_encryption_configuration instead.
            type: string
        source_selection_criteria:
            description: (Optional) Specifies special object selection criteria (documented below).
            optional: true
            type: string
        sse_algorithm:
            description: (Required) The server-side encryption algorithm to use. Valid values are AES256 and aws:kms
            type: string
        sse_kms_encrypted_objects:
            description: '(Optional) Match SSE-KMS encrypted objects (documented below). If specified, replica_kms_key_iddestination must be specified as well.SSE KMS Encrypted ObjectsThe sse_kms_encrypted_objects configuration block supports the following argument:'
            optional: true
            type: string
        status:
            description: (Optional) The status of replication metrics. Either Enabled or Disabled.
            optional: true
            type: string
        storage_class:
            description: (Optional) The storage class used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
            optional: true
            type: string
        tags:
            description: 'Destination~> strongNOTE: Replication to multiple destination buckets requires that priority is specified in the rules object. If the corresponding rule requires no filter, an empty configuration block filter {} must be specified.The destination configuration block supports the following arguments:'
            type: string
        tags_all:
            description: A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
            type: string
        target_bucket:
            description: (Required) The name of the bucket that will receive the log objects.
            type: string
        target_prefix:
            description: '(Optional) To specify a key prefix for log objects.Object Lock Configuration~> strongNOTE: You can only strongenable S3 Object Lock for strongnew buckets. If you need to strongenable S3 Object Lock for an strongexisting~> strongNOTE: Currently, changes to the object_lock_configuration configuration of emexisting resources cannot be automatically detected by Terraform. To manage changes of Object Lock settings to an S3 bucket, use the aws_s3_bucket_object_lock_configuration resource instead. If you use object_lock_configuration on an aws_s3_bucket, Terraform will assume management over the full set of Object Lock configuration parameters for the S3 bucket, treating additional Object Lock configuration parameters as drift. For this reason, object_lock_configuration cannot be mixed with the external aws_s3_bucket_object_lock_configuration resource for a given S3 bucket.The object_lock_configuration configuration block supports the following arguments:'
            optional: true
            type: string
        transition:
            description: (Optional) Specifies a period in the object's transitions. See Transition below for details.
            optional: true
            type: string
        type:
            description: (Required) Type of grantee to apply for. Valid values are CanonicalUser and Group. AmazonCustomerByEmail is not supported.
            type: string
        update:
            description: (Default 20m)
            type: string
        uri:
            description: '(Optional) Uri address to grant for. Used only when type is Group.Lifecycle Rule~> strongNOTE: Currently, changes to the lifecycle_rule configuration of emexisting resources cannot be automatically detected by Terraform. To manage changes of Lifecycle rules to an S3 bucket, use the aws_s3_bucket_lifecycle_configuration resource instead. If you use lifecycle_rule on an aws_s3_bucket, Terraform will assume management over the full set of Lifecycle rules for the S3 bucket, treating additional Lifecycle rules as drift. For this reason, lifecycle_rule cannot be mixed with the external aws_s3_bucket_lifecycle_configuration resource for a given S3 bucket.~> strongNOTE: At least one of abort_incomplete_multipart_upload_days, expiration, transition, noncurrent_version_expiration, noncurrent_version_transition must be specified.The lifecycle_rule configuration block supports the following arguments:'
            optional: true
            type: string
        versioning:
            description: (Optional, strongDeprecated) A configuration of the S3 bucket versioning state. See Versioning below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource aws_s3_bucket_versioning instead.
            type: string
        website:
            description: (Optional, strongDeprecated) A configuration of the S3 bucket website. See Websiteaws_s3_bucket_website_configuration instead.
            type: string
        website_domain:
            description: 'The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.TimeoutsConfiguration options:'
            type: string
        website_endpoint:
            description: The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
            type: string
        years:
            description: '(Optional) The number of years that you want to specify for the default retention period.Replication Configuration~> strongNOTE: Currently, changes to the replication_configuration configuration of emexisting resources cannot be automatically detected by Terraform. To manage replication configuration changes to an S3 bucket, use the aws_s3_bucket_replication_configuration resource instead. If you use replication_configuration on an aws_s3_bucket, Terraform will assume management over the full replication configuration for the S3 bucket, treating additional replication configuration rules as drift. For this reason, replication_configuration cannot be mixed with the external aws_s3_bucket_replication_configuration resource for a given S3 bucket.The replication_configuration configuration block supports the following arguments:'
            optional: true
            type: string
    attrs:
        arn:
            description: The ARN of the bucket. Will be of format arn:aws:s3:::bucketname.
            type: string
        bucket_domain_name:
            description: The bucket domain name. Will be of format bucketname.s3.amazonaws.com.
            type: string
        bucket_regional_domain_name:
            description: 'The bucket region-specific domain name. The bucket domain name including the region name, please refer here for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent redirect issues from CloudFront to S3 Origin URL.'
            type: string
        create:
            description: (Default 20m)
            type: string
        delete:
            description: (Default 60m)
            type: string
        hosted_zone_id:
            description: The Route 53 Hosted Zone ID for this bucket's region.
            type: string
        id:
            description: The name of the bucket.
            type: string
        read:
            description: (Default 20m)
            type: string
        region:
            description: The AWS region this bucket resides in.
            type: string
        tags_all:
            description: A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
            type: string
        update:
            description: (Default 20m)
            type: string
        website_domain:
            description: 'The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.TimeoutsConfiguration options:'
            type: string
        website_endpoint:
            description: The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
            type: string
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
