apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_codepipeline.markdown
spec:
    args:
        action:
            description: '(Required) The action(s) to include in the stage. Defined as an action block belowAn action block supports the following arguments:'
            type: string
        arn:
            description: The codepipeline ARN.
            type: string
        artifact_store:
            description: ' (Required) One or more artifact_store blocks. Artifact stores are documented below.'
            type: string
        category:
            description: (Required) A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are Approval, Build, Deploy, Invoke, Source and Test.
            type: string
        configuration:
            description: (Optional) A map of the action declaration's configuration. Configurations options for action types and providers can be found in the Pipeline Structure Reference and Action Structure Reference documentation.
            optional: true
            type: string
        encryption_key:
            description: (Optional) The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An encryption_key block is documented below.
            optional: true
            type: string
        id:
            description: The codepipeline ID.
            type: string
        input_artifacts:
            description: (Optional) A list of artifact names to be worked on.
            optional: true
            type: string
        location:
            description: (Required) The location where AWS CodePipeline stores artifacts for a pipeline; currently only S3 is supported.
            type: string
        name:
            description: (Required) The action declaration's name.
            type: string
        namespace:
            description: '(Optional) The namespace all output variables will be accessed from.~> strongNote: The input artifact of an action must exactly match the output artifact declared in a preceding action, but the input artifact does not have to be the next action in strict sequence from the action that provided the output artifact. Actions in parallel can declare different output artifacts, which are in turn consumed by different following actions.In addition to all arguments above, the following attributes are exported:'
            optional: true
            type: string
        output_artifacts:
            description: (Optional) A list of artifact names to output. Output artifact names must be unique within a pipeline.
            optional: true
            type: string
        owner:
            description: (Required) The creator of the action being called. Possible values are AWS, Custom and ThirdParty.
            type: string
        provider:
            description: (Required) The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the Action Structure Reference documentation.
            type: string
        region:
            description: (Optional) The region in which to run the action.
            optional: true
            type: string
        role_arn:
            description: (Optional) The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
            optional: true
            type: string
        run_order:
            description: (Optional) The order in which actions are run.
            optional: true
            type: string
        stage:
            description: ' (Minimum of at least two stage blocks is required) A stage block. Stages are documented below.'
            type: string
        tags:
            description: '(Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.An artifact_store block supports the following arguments:'
            optional: true
            type: string
        type:
            description: '(Required) The type of key; currently only KMS is supportedA stage block supports the following arguments:'
            type: string
        version:
            description: (Required) A string that identifies the action type.
            type: string
    attrs:
        arn:
            description: The codepipeline ARN.
            type: string
        id:
            description: The codepipeline ID.
            type: string
        tags_all:
            description: A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
            type: string
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
