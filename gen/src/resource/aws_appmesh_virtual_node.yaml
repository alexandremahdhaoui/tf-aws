apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_appmesh_virtual_node
spec:
    args:
        access_log:
            description: '(Optional) Access log configuration for a virtual node.The access_log object supports the following:'
            optional: true
            type: string
        acm:
            description: (Optional) An AWS Certificate Manager (ACM) certificate.
            optional: true
            type: string
        arn:
            description: ARN of the virtual node.
            type: string
        attributes:
            description: (Optional) String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
            optional: true
            type: string
        aws_cloud_map:
            description: (Optional) Any AWS Cloud Map information for the virtual node.
            optional: true
            type: string
        backend:
            description: (Optional) Backends to which the virtual node is expected to send outbound traffic.
            optional: true
            type: string
        backend_defaults:
            description: (Optional) Defaults for backends.
            optional: true
            type: string
        base_ejection_duration:
            description: (Required) Base amount of time for which a host is ejected.
            type: string
        certificate:
            description: (Required) Listener's TLS certificate.
            type: string
        certificate_arn:
            description: '(Required) ARN for the certificate.The file object supports the following:'
            type: string
        certificate_authority_arns:
            description: '(Required) One or more ACM ARNs.The file object supports the following:'
            type: string
        certificate_chain:
            description: '(Required) Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.The sds object supports the following:'
            type: string
        client_policy:
            description: '(Optional) Default client policy for virtual service backends. See above for details.The listener object supports the following:'
            optional: true
            type: string
        connection_pool:
            description: (Optional) Connection pool information for the listener.
            optional: true
            type: string
        created_date:
            description: Creation date of the virtual node.
            type: string
        dns:
            description: '(Optional) DNS service name for the virtual node.The aws_cloud_map object supports the following:'
            optional: true
            type: string
        enforce:
            description: (Optional) Whether the policy is enforced. Default is true.
            optional: true
            type: string
        exact:
            description: '(Required) Values sent must match the specified values exactly.The trust object supports the following:'
            type: string
        file:
            description: (Optional) TLS validation context trust for a local file certificate.
            optional: true
            type: string
        grpc:
            description: (Optional) Timeouts for gRPC listeners.
            optional: true
            type: string
        health_check:
            description: (Optional) Health check information for the listener.
            optional: true
            type: string
        healthy_threshold:
            description: (Required) Number of consecutive successful health checks that must occur before declaring listener healthy.
            type: string
        hostname:
            description: '(Required) DNS host name for your virtual node.The port_mapping object supports the following:'
            type: string
        http:
            description: (Optional) Timeouts for HTTP listeners.
            optional: true
            type: string
        http2:
            description: (Optional) Timeouts for HTTP2 listeners.
            optional: true
            type: string
        id:
            description: ID of the virtual node.
            type: string
        idle:
            description: '(Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.The idle object supports the following:'
            optional: true
            type: string
        interval:
            description: (Required) Time interval between ejection sweep analysis.
            type: string
        interval_millis:
            description: '- (Required) Time period in milliseconds between each health check execution.'
            type: string
        last_updated_date:
            description: Last update date of the virtual node.
            type: string
        listener:
            description: (Optional) Listeners from which the virtual node is expected to receive inbound traffic.
            optional: true
            type: string
        logging:
            description: (Optional) Inbound and outbound access logging information for the virtual node.
            optional: true
            type: string
        match:
            description: '(Required) Criteria for determining a SAN''s match.The match object supports the following:'
            type: string
        max_connections:
            description: '(Required) Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.The health_check object supports the following:'
            type: string
        max_ejection_percent:
            description: |-
                (Required) Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
                Minimum value of 0. Maximum value of 100.
            type: string
        max_pending_requests:
            description: '(Optional) Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.The http2 connection pool object supports the following:'
            optional: true
            type: string
        max_requests:
            description: '(Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.The tcp connection pool object supports the following:'
            type: string
        max_server_errors:
            description: '(Required) Number of consecutive 5xx errors required for ejection. Minimum value of 1.The base_ejection_duration and interval objects support the following:'
            type: string
        mesh_name:
            description: (Required) Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
            type: string
        mesh_owner:
            description: (Optional) AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
            optional: true
            type: string
        mode:
            description: '- (Required) Listener''s TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.'
            type: string
        name:
            description: (Required) Name to use for the virtual node. Must be between 1 and 255 characters in length.
            type: string
        namespace_name:
            description: aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
            type: string
        outlier_detection:
            description: (Optional) Outlier detection information for the listener.
            optional: true
            type: string
        path:
            description: (Optional) Destination path for the health check request. This is only required if the specified protocol is http or http2.
            optional: true
            type: string
        per_request:
            description: '(Optional) Per request timeout.The idle and per_request objects support the following:'
            optional: true
            type: string
        port:
            description: '(Optional) Destination port for the health check request. This port must match the port defined in the port_mapping for the listener.The outlier_detection object supports the following:'
            optional: true
            type: string
        port_mapping:
            description: (Required) Port mapping information for the listener.
            type: string
        ports:
            description: (Optional) One or more ports that the policy is enforced for.
            optional: true
            type: string
        private_key:
            description: '(Required) Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.The sds object supports the following:'
            type: string
        protocol:
            description: (Required) Protocol for the health check request. Valid values are http, http2, tcp and grpc.
            type: string
        resource_owner:
            description: Resource owner's AWS account ID.
            type: string
        sds:
            description: '(Optional) TLS validation context trust for a Secret Discovery Service certificate.The file object supports the following:'
            optional: true
            type: string
        secret_name:
            description: '(Required) Name of the secret for a virtual node''s Transport Layer Security (TLS) Secret Discovery Service validation context trust.In addition to all arguments above, the following attributes are exported:'
            type: string
        service_discovery:
            description: '(Optional) Service discovery information for the virtual node.The backend object supports the following:'
            optional: true
            type: string
        service_name:
            description: '(Required) Name of the AWS Cloud Map service to use. Use the aws_service_discovery_service resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.The dns object supports the following:'
            type: string
        spec:
            description: (Required) Virtual node specification to apply.
            type: string
        subject_alternative_names:
            description: (Optional) SANs for a TLS validation context.
            optional: true
            type: string
        tags:
            description: '(Optional) Map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.The spec object supports the following:'
            optional: true
            type: string
        tcp:
            description: '(Optional) Timeouts for TCP listeners.The grpc timeout object supports the following:'
            optional: true
            type: string
        timeout:
            description: (Optional) Timeouts for different protocols.
            optional: true
            type: string
        timeout_millis:
            description: (Required) Amount of time to wait when receiving a response from the health check, in milliseconds.
            type: string
        tls:
            description: '(Optional) Transport Layer Security (TLS) properties for the listenerThe logging object supports the following:'
            optional: true
            type: string
        trust:
            description: '(Required) TLS validation context trust.The subject_alternative_names object supports the following:'
            type: string
        unhealthy_threshold:
            description: (Required) Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
            type: string
        unit:
            description: '(Required) Unit of time. Valid values: ms, s.'
            type: string
        validation:
            description: '- (Optional) Listener''s Transport Layer Security (TLS) validation context.The certificate object supports the following:'
            optional: true
            type: string
        value:
            description: '(Required) Number of time units. Minimum value of 0.The tls object supports the following:'
            type: string
        virtual_service:
            description: '(Required) Virtual service to use as a backend for a virtual node.The virtual_service object supports the following:'
            type: string
        virtual_service_name:
            description: '(Required) Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.The client_policy object supports the following:'
            type: string
    attrs:
        arn:
            description: ARN of the virtual node.
            type: string
        created_date:
            description: Creation date of the virtual node.
            type: string
        id:
            description: ID of the virtual node.
            type: string
        last_updated_date:
            description: Last update date of the virtual node.
            type: string
        resource_owner:
            description: Resource owner's AWS account ID.
            type: string
        tags_all:
            description: Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
            type: string
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
