apiVersion: aws.terraform.alexandre.mahdhaoui.com/v0.1.0
kind: TerraformResource
metadata:
    name: aws_codedeploy_deployment_group
spec:
    args:
        CONTINUE_DEPLOYMENT:
            description: ': Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.'
            type: string
        COPY_AUTO_SCALING_GROUP:
            description: ': Use settings from a specified strongAuto Scaling group to define and create instances in a new Auto Scaling group. emExactly one Auto Scaling group must be specified when selecting COPY_AUTO_SCALING_GROUP. Use autoscaling_groups to specify the Auto Scaling group.You can configure how instances in the original environment are terminated when a blue/green deployment is successful. terminate_blue_instances_on_deployment_success supports the following:'
            type: string
        DISCOVER_EXISTING:
            description: ': Use instances that already exist or will be created manually.'
            type: string
        KEEP_ALIVE:
            description: ': Instances are left running after they are deregistered from the load balancer and removed from the deployment group.'
            type: string
        STOP_DEPLOYMENT:
            description: ': Do not register new instances with load balancer unless traffic is rerouted manually. If traffic is not rerouted manually before the end of the specified wait period, the deployment status is changed to Stopped.'
            type: string
        TERMINATE:
            description: ': Instances are terminated after a specified wait time.'
            type: string
        action:
            description: ""
            type: string
        action_on_timeout:
            description: ""
            type: string
        alarm_configuration:
            description: (Optional) Configuration block of alarms associated with the deployment group (documented below).
            optional: true
            type: string
        alarms:
            description: (Optional) A list of alarms configured for the deployment group. emA maximum of 10 alarms can be added to a deployment group.
            optional: true
            type: string
        app_name:
            description: (Required) The name of the application.
            type: string
        arn:
            description: The ARN of the CodeDeploy deployment group.
            type: string
        auto_rollback_configuration:
            description: (Optional) Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
            optional: true
            type: string
        autoscaling_groups:
            description: (Optional) Autoscaling groups associated with the deployment group.
            optional: true
            type: string
        blue_green_deployment_config:
            description: (Optional) Configuration block of the blue/green deployment options for a deployment group (documented below).
            optional: true
            type: string
        cluster_name:
            description: (Required) The name of the ECS cluster.
            type: string
        compute_platform:
            description: The destination platform type for the deployment.
            type: string
        deployment_config_name:
            description: (Optional) The name of the group's deployment config. The default is "CodeDeployDefault.OneAtATime".
            optional: true
            type: string
        deployment_group_id:
            description: The ID of the CodeDeploy deployment group.
            type: string
        deployment_group_name:
            description: (Required) The name of the deployment group.
            type: string
        deployment_option:
            description: (Optional) Indicates whether to route deployment traffic behind a load balancer. Valid Values are WITH_TRAFFIC_CONTROL or WITHOUT_TRAFFIC_CONTROL. Default is WITHOUT_TRAFFIC_CONTROL.
            optional: true
            type: string
        deployment_ready_option:
            description: (Optional) Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
            optional: true
            type: string
        deployment_style:
            description: (Optional) Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
            optional: true
            type: string
        deployment_type:
            description: '(Optional) Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are IN_PLACE or BLUE_GREEN. Default is IN_PLACE.emOnly one deployment_style is allowed.ec2_tag_filter Argument ReferenceThe ec2_tag_filter configuration block supports the following:'
            optional: true
            type: string
        ec2_tag_filter:
            description: (Optional) Tag filters associated with the deployment group. See the AWS docs for details.
            optional: true
            type: string
        ec2_tag_set:
            description: (Optional) Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
            optional: true
            type: string
        ecs_service:
            description: (Optional) Configuration block(s) of the ECS services for a deployment group (documented below).
            optional: true
            type: string
        elb_info:
            description: (Optional) The Classic Elastic Load Balancer to use in a deployment. Conflicts with target_group_info and target_group_pair_info.
            optional: true
            type: string
        enabled:
            description: (Optional) Indicates whether a defined automatic rollback configuration is currently enabled for this Deployment Group. If you enable automatic rollback, you must specify at least one event type.
            optional: true
            type: string
        events:
            description: '(Optional) The event type or types that trigger a rollback. Supported types are DEPLOYMENT_FAILURE and DEPLOYMENT_STOP_ON_ALARM.emOnly one auto_rollback_configuration is allowed.blue_green_deployment_config Argument ReferenceYou can configure options for a blue/green deployment. blue_green_deployment_config supports the following:'
            optional: true
            type: string
        "false":
            description: ': The deployment will stop if alarm status information can''t be retrieved.emOnly one alarm_configuration is allowed.auto_rollback_configuration Argument ReferenceYou can configure a deployment group to automatically rollback when a deployment fails or when a monitoring threshold you specify is met. In this case, the last known good version of an application revision is deployed. auto_rollback_configuration supports the following:'
            type: string
        green_fleet_provisioning_option:
            description: (Optional) Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
            optional: true
            type: string
        id:
            description: Application name and deployment group name.
            type: string
        ignore_poll_alarm_failure:
            description: (Optional) Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is false
            optional: true
            type: string
        key:
            description: (Optional) The key of the tag filter.
            optional: true
            type: string
        listener_arns:
            description: '(Required) List of Amazon Resource Names (ARNs) of the load balancer listeners.on_premises_instance_tag_filter Argument ReferenceThe on_premises_instance_tag_filter configuration block supports the following:'
            type: string
        load_balancer_info:
            description: (Optional) Single configuration block of the load balancer to use in a blue/green deployment (documented below).
            optional: true
            type: string
        name:
            description: '(Required) Name of the target group.load_balancer_info target_group_pair_info test_traffic_route Argument ReferenceThe test_traffic_route configuration block supports the following:'
            type: string
        on_premises_instance_tag_filter:
            description: (Optional) On premise tag filters associated with the group. See the AWS docs for details.
            optional: true
            type: string
        prod_traffic_route:
            description: (Required) Configuration block for the production traffic route (documented below).
            type: string
        service_name:
            description: '(Required) The name of the ECS service.load_balancer_info Argument ReferenceYou can configure the strongLoad Balancer to use in a deployment. load_balancer_info supports the following:'
            type: string
        service_role_arn:
            description: (Required) The service role ARN that allows deployments.
            type: string
        tags:
            description: '(Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.alarm_configuration Argument ReferenceYou can configure a deployment to stop when a strongCloudWatch alarm detects that a metric has fallen below or exceeded a defined threshold. alarm_configuration supports the following:'
            optional: true
            type: string
        target_group:
            description: (Required) Configuration blocks for a target group within a target group pair (documented below).
            type: string
        target_group_info:
            description: (Optional) The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with elb_info and target_group_pair_info.
            optional: true
            type: string
        target_group_pair_info:
            description: '(Optional) The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with elb_info and target_group_info.load_balancer_info elb_info Argument ReferenceThe elb_info configuration block supports the following:'
            optional: true
            type: string
        terminate_blue_instances_on_deployment_success:
            description: '(Optional) Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).emOnly one blue_green_deployment_config is allowed.You can configure how traffic is rerouted to instances in a replacement environment in a blue/green deployment. deployment_ready_option supports the following:'
            optional: true
            type: string
        termination_wait_time_in_minutes:
            description: '(Optional) The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.deployment_style Argument ReferenceYou can configure the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer. deployment_style supports the following:'
            optional: true
            type: string
        test_traffic_route:
            description: '(Optional) Configuration block for the test traffic route (documented below).load_balancer_info target_group_pair_info prod_traffic_route Argument ReferenceThe prod_traffic_route configuration block supports the following:'
            optional: true
            type: string
        trigger_configuration:
            description: (Optional) Configuration block(s) of the triggers for the deployment group (documented below).
            optional: true
            type: string
        trigger_events:
            description: '(Required) The event type or types for which notifications are triggered. Some values that are supported: DeploymentStart, DeploymentSuccess, DeploymentFailure, DeploymentStop, DeploymentRollback, InstanceStart, InstanceSuccess, InstanceFailure.  See the CodeDeploy documentation for all possible values.'
            type: string
        trigger_name:
            description: (Required) The name of the notification trigger.
            type: string
        trigger_target_arn:
            description: '(Required) The ARN of the SNS topic through which notifications are sent.In addition to all arguments above, the following attributes are exported:'
            type: string
        "true":
            description: ': The deployment will proceed even if alarm status information can''t be retrieved.'
            type: string
        type:
            description: (Optional) The type of the tag filter, either KEY_ONLY, VALUE_ONLY, or KEY_AND_VALUE.
            optional: true
            type: string
        value:
            description: '(Optional) The value of the tag filter.trigger_configuration Argument ReferenceAdd triggers to a Deployment Group to receive notifications about events related to deployments or instances in the group. Notifications are sent to subscribers of the strongSNS topic associated with the trigger. emCodeDeploy must have permission to publish to the topic from this deployment group. trigger_configuration supports the following:'
            optional: true
            type: string
        wait_time_in_minutes:
            description: '(Optional) The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the STOP_DEPLOYMENT option for action_on_timeout.You can configure how instances will be added to the replacement environment in a blue/green deployment. green_fleet_provisioning_option supports the following:'
            optional: true
            type: string
    attrs:
        arn:
            description: The ARN of the CodeDeploy deployment group.
            type: string
        compute_platform:
            description: The destination platform type for the deployment.
            type: string
        deployment_group_id:
            description: The ID of the CodeDeploy deployment group.
            type: string
        id:
            description: Application name and deployment group name.
            type: string
        tags_all:
            description: A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
            type: string
    terraform:
        backend: ""
        version: 1.3.4
        provider:
            assume_role: false
            name: aws
            source: hashicorp/aws
            version: 4.38.0
            default_tags:
                enabled: true
